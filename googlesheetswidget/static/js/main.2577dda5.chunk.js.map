{"version":3,"sources":["components/auth.js","components/autocomplete.js","components/loading.js","components/options.js","App.js","serviceWorker.js","index.js"],"names":["Auth","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleAuthClick","bind","assertThisInitialized","that","console","log","window","gapi","auth2","getAuthInstance","grantOfflineAccess","then","resp","auth_code","code","$","ajax","url","method","data","success","result","authDone","error","err","_this2","react_default","a","createElement","className","Button","id","onClick","Component","AutocompletePage","multiple","lib","labelKey","options","placeholder","onChange","selected","includes","JFCustomWidget","sendData","value","Loading","Options","input","failedLookup","updated","fetchGoogleSheets","subscribe","e","msg","valid","document","getElementsByTagName","sendSubmit","JSON","stringify","sheetId","spreadsheetUrl","table","googleSheetTable","res","i","values","length","columnIndex","push","setState","autocomplete","loading","App","status","initClient","loadGapiAndAfterwardsInitAuth","getJotFormParams","loadAWS","prepAWS","script","src","async","defer","onload","head","appendChild","_this3","BucketName","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","S3","apiVersion","params","Bucket","getObject","Key","_this4","googleSheetId","getWidgetSetting","DISCOVERY_DOCS","load","client","init","apiKey","clientId","discoveryDocs","scope","catch","page","auth","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2577dda5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport $ from 'jquery';\n\nclass Auth extends Component {\n\nconstructor(props) {\n    super(props);\n    this.state = {};\n    this.handleAuthClick = this.handleAuthClick.bind(this);\n  }\n\n  handleAuthClick(that) {\n    console.log(\"handle auth click\");\n    window.gapi.auth2.getAuthInstance().grantOfflineAccess().then(function(resp) {\n      var auth_code = resp.code;\n      $.ajax({\n        url: 'https://g6728mnsi5.execute-api.us-east-1.amazonaws.com/exchangeCodeForTOken/exchangecodefortoken',\n        method:'POST',\n        data: auth_code,\n        success: function(result){\n          console.log(\"Done!\");\n          that.props.authDone();\n          console.log(result);\n        },\n        error: function(err){\n          console.log(\"BOO\");\n          console.log(err);\n        }\n      }) \n    });\n  }\n\n\n\n\nrender() {\n    return (\n        \n    <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col align-self-center\">\n            <div className=\"buttons\">\n                <Button id=\"button\" onClick={() => this.handleAuthClick(this)}>Authorise</Button>\n            </div>\n          </div>\n        </div>    \n    </div>\n    );\n}\n\n}\nexport default Auth;","\nimport React, { Component } from 'react';\nimport {Typeahead} from 'react-bootstrap-typeahead';\n\n\n\nclass AutocompletePage extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {multiple:false};\n  }\n\n\n  render() {\n    const {multiple} = false;\n    return (\n        <Typeahead\n          labelKey=\"name\"\n          multiple={multiple}\n          options={this.props.options}\n          placeholder=\"Search\"\n          onChange={(selected) => { \n            console.log(selected);\n            if ( this.props.options.includes(selected)){\n            console.log(\"Includes\");\n            window.JFCustomWidget.sendData({value:selected});\n          }\n          } }\n        />);\n  }\n}\n\n\nexport default AutocompletePage;\n\n\n\n","import React, { Component } from 'react';\n\n\nclass Loading extends Component {\n\n\n\nrender() {\n    return (\n        \n    <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col align-self-center\">\n            <h2>Loading...</h2>\n          </div>\n        </div>    \n    </div>\n    );\n}\n\n}\nexport default Loading;","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport AutocompletePage from './autocomplete';\nimport Loading from './loading';\n\nclass Options extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\", failedLookup: false, options: [], updated:false };\n    this.fetchGoogleSheets = this.fetchGoogleSheets.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchGoogleSheets(this);\n    window.JFCustomWidget.subscribe(\"submit\", (e) => {\n      var msg = {\n          valid: true,\n          value: document.getElementsByTagName('input')[0].value\n      }\n      window.JFCustomWidget.sendSubmit(msg);\n  });\n    \n  }\n\n\n\n  fetchGoogleSheets(that) {\n    console.log(\"In fetch google sheets\");\n\n    $.ajax({\n      url: 'https://g6728mnsi5.execute-api.us-east-1.amazonaws.com/exchangeCodeForTOken/querygooglesheet',\n      method: 'POST',\n      data: JSON.stringify({'sheetId':that.props.spreadsheetUrl,'table':that.props.googleSheetTable}),\n      success: function (resp) {\n        var res = [];\n        for(var i =0;i<resp.values.length;i++){\n          if (resp.values[i][that.props.columnIndex] ){\n            res.push(resp.values[i][that.props.columnIndex]);\n          }\n        }\n        that.setState({ options: res, updated:true });\n      },\n      error: function (err) {\n        console.log(err);\n        that.setState({ failedLookup: true });\n      }\n    });\n    \n  }\n\n\n\n  render() {\n    if (this.state.failedLookup) {\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col align-self-center\">\n              <h2>There was an error loading data from google sheets...</h2>\n              <h4>Ensure that google sheets id,table name and column id are correct and reload the page. </h4>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (!this.state.updated){\n      return (<Loading> </Loading>);\n    }\n    return (\n      <div className=\"container\">\n        \n          <div className=\"col-sm-10\">\n            <AutocompletePage options={this.state.options} columnIndex={0}> </AutocompletePage>\n          </div>\n        \n\n      </div>\n\n    );\n  }\n\n}\nexport default Options;","import React, { Component } from 'react';\nimport './App.css';\nimport Auth from './components/auth';\nimport Options from './components/options';\nimport Loading from './components/loading';\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading:true,\n      status:'auth',\n      spreadsheetUrl:'',\n      googleSheetTable:'',\n      columnIndex: 0\n    }\n  \n    this.authDone = this.authDone.bind(this);\n    this.initClient = this.initClient.bind(this);\n    this.loadGapiAndAfterwardsInitAuth = this.loadGapiAndAfterwardsInitAuth.bind(this);\n    this.getJotFormParams = this.getJotFormParams.bind(this);\n    this.loadAWS = this.loadAWS.bind(this);\n    this.prepAWS = this.prepAWS.bind(this);\n  }\n\n  loadGapiAndAfterwardsInitAuth() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n    script.async = true;\n    script.defer = true;\n    script.onload=()=>{this.initClient(this)};\n    document.head.appendChild(script);\n}\n\n  loadAWS(){\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.amazonaws.com/js/aws-sdk-2.283.1.min.js\";\n    script.async = true;\n    script.defer = true;\n    script.onload=()=>{this.prepAWS(this)};\n    document.head.appendChild(script);\n  }\n\n  prepAWS(that){\n    console.log(\"AWS ready!\");\n    var BucketName = 'kuku.bucket.for.creds.superunique1235925';\n    window.AWS.config.region = 'us-east-1'; \n    window.AWS.config.credentials = new window.AWS.CognitoIdentityCredentials({\n        IdentityPoolId: \"us-east-1:ae3448c6-787e-4d5c-8e3b-19b9acba2b38\",\n    });\n\n    var s3 = new window.AWS.S3({\n      apiVersion: '2006-03-01',\n      params: {Bucket: BucketName}\n    });\n\n    s3.getObject({Bucket: BucketName, Key: \"Done.txt\"}, function(err,data){\n      if (err){\n        that.loadGapiAndAfterwardsInitAuth();\n      } else {\n        that.setState({status:'search', loading:false});\n      }\n    });\n\n  }\n\n\n  componentDidMount(){\n    this.loadAWS();\n    window.JFCustomWidget.subscribe(\"ready\", ()=> {\n      this.getJotFormParams(this);\n    })\n  }\n\n  getJotFormParams(that){\n    const googleSheetId = window.JFCustomWidget.getWidgetSetting('googleSheetId');\n    const googleSheetTable = window.JFCustomWidget.getWidgetSetting('googleSheetTableName');\n    const columnIndex = window.JFCustomWidget.getWidgetSetting('columnIndex');\n    that.setState({spreadsheetUrl:googleSheetId, googleSheetTable:googleSheetTable, columnIndex:columnIndex-1});\n  }\n\n  authDone(){\n    this.setState({status:'search'});\n  }\n\n\n\n  initClient(that) {\n    var CLIENT_ID = '359652543273-isuh9t7hco6p8f1pav3kau3misrim8tv.apps.googleusercontent.com';\n    var API_KEY = 'AIzaSyDjHBwz8TITrxzmbOhLgx0m0MW1RyXkAPw';\n    var DISCOVERY_DOCS = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\n    var SCOPES = \"https://www.googleapis.com/auth/spreadsheets.readonly\";\n    window.gapi.load('client', function(){\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then((res)=>{\n      that.setState({loading:false});\n      console.log(\"client loaded\");\n    }).catch((error) =>{\n      console.log(error);\n      });\n    });\n  }\n\n\n\n  render() {\n    var page;\n    if (this.state.loading || !this.state.spreadsheetUrl){  \n  //  if (this.state.loading ){ \n      page = <Loading> </Loading>\n    }else {\n      if (this.state.status === 'auth' ){\n        page = <Auth authDone={this.authDone}> </Auth>;\n      } else if (this.state.status === 'search'){\n        page = <Options spreadsheetUrl={this.state.spreadsheetUrl} googleSheetTable={this.state.googleSheetTable} columnIndex={this.state.columnIndex}></Options>\n      }\n    }\n    return (\n      <div className=\"App\">\n        {page}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}